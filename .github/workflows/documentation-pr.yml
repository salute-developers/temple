name: Deploy documentation artifacts [pull request]

on:
  pull_request:
    branches:
      - main

concurrency:
  # New commit on branch cancels running workflows of the same branch
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  deploy:
    name: Deploy documentation artifacts
    runs-on: ubuntu-latest
    env:
      PR_NAME: pr-${{ github.event.number }}
      ICONS_PUBLIC_URL: /icons
    steps:
      - uses: actions/checkout@v4
        with:
          show-progress: false

      - name: Prepare environment
        uses: ./.github/actions/prepare-environment

      - name: Lerna bootstrap
        run: npx lerna bootstrap

      - name: Prepare directory
        run: mkdir -p s3_build/${PR_NAME}

      - name: Plasma Web Temple
        run: |
          export NODE_OPTIONS=--openssl-legacy-provider
          npm run build --prefix="./website/plasma-temple-docs"
          cp -R ./website/plasma-temple-docs/build ./s3_build/${PR_NAME}/temple

      - name: Plasma Temple Storybook
        run: |
          npm run storybook:build --prefix="./packages/plasma-temple"
          cp -R ./packages/plasma-temple/build-sb ./s3_build/${PR_NAME}/temple-storybook

      - name: Install s3cmd
        run: pip3 install s3cmd

      - name: s3 Upload builds
        run: >
          s3cmd
          --access_key ${{ secrets.AWS_ACCESS_KEY_ID }}
          --secret_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          --host ${{ secrets.AWS_ENDPOINT }}
          --host-bucket ${{ secrets.AWS_ENDPOINT }}
          --bucket-location ${{ secrets.AWS_REGION }}
          --signature-v2
          --delete-removed
          --no-mime-magic
          sync
          ./s3_build/${PR_NAME}/
          s3://${{ secrets.AWS_S3_BUCKET }}/pr/${PR_NAME}/

      - name: Post success comment
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GH_TOKEN}}
          script: |
            const {
              issue: { number },
              repo: { owner, repo }
            } = context;

              github.rest.issues.createComment({
                issue_number: number,
                owner,
                repo,
                body: `Documentation preview deployed!
                website: http://plasma.sberdevices.ru/pr/pr-${number}/
                temple storybook: http://plasma.sberdevices.ru/pr/pr-${number}/temple-storybook/
                `
              });
