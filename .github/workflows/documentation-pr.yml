name: PR Documentation and Storybook

on:
  pull_request:
    branches:
      - master
  pull_request_target:
    branches:
      - dev

concurrency:
  # New commit on branch cancels running workflows of the same branch
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  authorize:
    name: Authorize external pull request
    uses: ./.github/workflows/authorize-external-pr.yml
  
  scope:
    needs: [ authorize ]
    uses: ./.github/workflows/change-detection.yml
    with:
      as-enumeration: true
      ref: refs/pull/${{github.event.pull_request.number}}/merge
    secrets: inherit
  
  build:
    name: Build
    needs: [ authorize, scope ]
    if: ${{ needs.scope.outputs.HAS_DOCUMENTATION_CHANGED == 'true' }}
    runs-on: ubuntu-latest
    env:
      NPM_REGISTRY_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}
      PR_NAME: pr-${{ github.event.number }}
      ICONS_PUBLIC_URL: /icons
    steps:
      - uses: actions/checkout@v4
        with:
          show-progress: false
          ref: refs/pull/${{github.event.pull_request.number}}/merge
      
      - name: Prepare environment
        uses: ./.github/actions/prepare-environment
      
      - name: Computed scope
        id: scope
        uses: actions/github-script@v6
        env:
          ENUMERATION: ${{ toJSON(needs.scope.outputs.PACKAGES_ENUMERATION) }}
        with:
          result-encoding: string
          script: |
            const { ENUMERATION } = process.env;
            
            const enumeration = JSON.parse(JSON.parse(ENUMERATION));
            
            return enumeration.join(',');
      
      - name: Lerna bootstrap
        run: npx lerna bootstrap --scope=@salutejs/{${{steps.scope.outputs.result}}}
      
      - name: Prepare directory
        run: mkdir -p s3_build/${PR_NAME}
      
      - name: Plasma Web Temple
        if: ${{ needs.scope.outputs.HAS_PLASMA_TEMPLE_DOCS == 'true' && needs.scope.outputs.HAS_PLASMA_TEMPLE == 'true' }}
        run: |
          export NODE_OPTIONS=--openssl-legacy-provider
          npm run build --prefix="./website/plasma-temple-docs"
          cp -R ./website/plasma-temple-docs/build ./s3_build/${PR_NAME}/temple
      
      - name: Plasma Temple Storybook
        if: ${{ needs.scope.outputs.HAS_PLASMA_TEMPLE == 'true' }}
        run: |
          npm run storybook:build --prefix="./packages/plasma-temple"
          cp -R ./packages/plasma-temple/build-sb ./s3_build/${PR_NAME}/temple-storybook
      
      - name: Install s3cmd
        run: pip3 install s3cmd
      
      - name: s3 Upload builds
        run: >
          s3cmd
          --access_key ${{ secrets.AWS_ACCESS_KEY_ID }}
          --secret_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          --host ${{ secrets.AWS_ENDPOINT }}
          --host-bucket ${{ secrets.AWS_ENDPOINT }}
          --bucket-location ${{ secrets.AWS_REGION }}
          --signature-v2
          --delete-removed
          --no-mime-magic
          sync
          ./s3_build/${PR_NAME}/
          s3://${{ secrets.AWS_S3_BUCKET_2 }}/pr/${PR_NAME}/

      - name: Post success comment
        uses: actions/github-script@v6
        env:
          HAS_PLASMA_TEMPLE: ${{ fromJSON(needs.scope.outputs.HAS_PLASMA_TEMPLE) }}
        with:
          github-token: ${{secrets.GH_TOKEN}}
          script: |
            const { HAS_PLASMA_B2C, HAS_PLASMA_WEB, HAS_PLASMA_UI, HAS_PLASMA_TEMPLE, HAS_PLASMA_HOPE, HAS_PLASMA_ASDK } = process.env;
            
            const {
              issue: { number },
              repo: { owner, repo }
            } = context;
            
            const links = [
              `temple docs: http://plasma.sberdevices.ru/pr/pr-${number}/temple/`
            ];
            
            if (HAS_PLASMA_TEMPLE === 'true') {
              links.push(`temple storybook: http://plasma.sberdevices.ru/pr/pr-${number}/temple-storybook/`)
            }
            
            github.rest.issues.createComment({
              issue_number: number,
              owner,
              repo,
              body: `Documentation preview deployed!
            
              ${links.join('\n')}
              `
            });
